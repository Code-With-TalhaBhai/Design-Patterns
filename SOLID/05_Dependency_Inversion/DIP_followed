// Abstraction (Interface)
interface Database {
    save(data: string): void;
}

// MySQL implementation (Low-level module)
export class MySQLDatabase implements Database {
    save(data: string): void {
        console.log(`Executing SQL Query: INSERT INTO users VALUES('${data}');`);
    }
}

// MongoDB implementation (Low-level module)
export class MongoDBDatabase implements Database {
    save(data: string): void {
        console.log(`Executing MongoDB Function: db.users.insert({name: '${data}'})`);
    }
}

// High-level module (Now loosely coupled)
export class UserService {
    private db: Database;

    constructor(database: Database) { // Dependency Injection
        this.db = database;
    }

    storeUser(user: string): void {
        this.db.save(user);
    }
}

// Main simulation
const mysql = new MySQLDatabase();
const mongodb = new MongoDBDatabase();

const service1 = new UserService(mysql);
service1.storeUser("Aditya");

const service2 = new UserService(mongodb);
service2.storeUser("Rohit");
